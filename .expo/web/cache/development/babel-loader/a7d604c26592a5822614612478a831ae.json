{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar token;\nAsyncStorage.getItem('Authorization').then(function (res) {\n  token = res;\n});\nexport var axiosInstance = function axiosInstance(props) {\n  var retrieveData = function retrieveData() {\n    var value;\n    return _regeneratorRuntime.async(function retrieveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('Authorization'));\n\n          case 3:\n            value = _context.sent;\n\n            if (!(value !== null)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", value);\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var instance = axios.create();\n  var jwtToken = token;\n  axios.interceptors.request.use(function (config) {\n    if (jwtToken) {\n      config.headers['Authorization'] = jwtToken;\n    }\n\n    return config;\n  }, function (err) {\n    return Promise.reject(err);\n  });\n  axios.interceptors.response.use(function (response) {\n    return new Promise(function (resolve) {\n      resolve(response);\n    });\n  }, function (error) {\n    if (!error.response) {\n      return new Promise(function (resolve, reject) {\n        reject(error);\n      });\n    }\n\n    if (error.response.status === 401) {\n      alert(\"Log in error!\");\n      return props.navigation.popToTop();\n    } else {\n      return new Promise(function (resolve, reject) {\n        reject(error);\n      });\n    }\n  });\n  return instance;\n};","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/Interceptor.js"],"names":["axios","AsyncStorage","token","getItem","then","res","axiosInstance","props","retrieveData","value","instance","create","jwtToken","interceptors","request","use","config","headers","err","Promise","reject","response","resolve","error","status","alert","navigation","popToTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;SACSC,Y;AAET,IAAIC,KAAJ;AACAD,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsCC,IAAtC,CAA2C,UAACC,GAAD,EAAO;AAC9CH,EAAAA,KAAK,GAAGG,GAAR;AACH,CAFD;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAEpC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOP,YAAY,CAACE,OAAb,CAAqB,eAArB,CAFP;;AAAA;AAEPM,YAAAA,KAFO;;AAAA,kBAGTA,KAAK,KAAK,IAHD;AAAA;AAAA;AAAA;;AAAA,6CAIFA,KAJE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CASV,IATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAYA,MAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,EAAjB;AACA,MAAMC,QAAQ,GAAGV,KAAjB;AAEAF,EAAAA,KAAK,CAACa,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAAUC,MAAV,EAAkB;AACd,QAAIJ,QAAJ,EAAc;AACVI,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkCL,QAAlC;AACH;;AACD,WAAOI,MAAP;AACH,GANL,EAOI,UAAUE,GAAV,EAAe;AACX,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,GATL;AAYAlB,EAAAA,KAAK,CAACa,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACI,UAACM,QAAD;AAAA,WACI,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAa;AACrBA,MAAAA,OAAO,CAACD,QAAD,CAAP;AACH,KAFD,CADJ;AAAA,GADJ,EAKI,UAACE,KAAD,EAAU;AACN,QAAG,CAACA,KAAK,CAACF,QAAV,EAAmB;AACf,aAAO,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACpCA,QAAAA,MAAM,CAACG,KAAD,CAAN;AACH,OAFM,CAAP;AAGH;;AACD,QAAGA,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAA7B,EAAiC;AAE7BC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA,aAAOlB,KAAK,CAACmB,UAAN,CAAiBC,QAAjB,EAAP;AACH,KAJD,MAIM;AACF,aAAO,IAAIR,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAoB;AACnCA,QAAAA,MAAM,CAACG,KAAD,CAAN;AACH,OAFM,CAAP;AAGH;AACJ,GApBL;AAsBA,SAAOb,QAAP;AACH,CApDM","sourcesContent":["import axios from \"axios\";\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nlet token;\r\nAsyncStorage.getItem('Authorization').then((res)=>{\r\n    token = res;\r\n});\r\n\r\nexport const axiosInstance = (props) => {\r\n\r\n    const retrieveData = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem('Authorization');\r\n            if (value !== null) {\r\n                return value;\r\n            }\r\n        } catch (error) {\r\n            // Error retrieving data\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const instance = axios.create();\r\n    const jwtToken = token;\r\n\r\n    axios.interceptors.request.use(\r\n        function (config) {\r\n            if (jwtToken) {\r\n                config.headers['Authorization'] = jwtToken;\r\n            }\r\n            return config;\r\n        },\r\n        function (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n        (response) =>\r\n            new Promise((resolve) => {\r\n                resolve(response);\r\n            }),\r\n        (error) =>{\r\n            if(!error.response){\r\n                return new Promise((resolve, reject) => {\r\n                    reject(error);\r\n                })\r\n            }\r\n            if(error.response.status === 401){\r\n                //return console.log(\"401 Interceptor\");\r\n                alert(\"Log in error!\");\r\n                return props.navigation.popToTop();\r\n            }else {\r\n                return new Promise((resolve, reject)=> {\r\n                    reject(error);\r\n                })\r\n            }\r\n        }\r\n    );\r\n    return instance;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}