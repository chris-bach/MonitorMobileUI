{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\MyDocsView.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\nimport axios from \"axios\";\nimport { getDocumentsByOrganisationId } from \"../Services/DocumentService\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar MyDocsView = function MyDocsView() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      docList = _useState2[0],\n      setDocList = _useState2[1];\n\n  var organisationId = 1;\n  useEffect(function () {\n    getDocumentsByOrganisationId(organisationId).then(function (response) {\n      var docs = [];\n      response.data.forEach(function (object) {\n        docs.push(object);\n      });\n      setDocList(docs);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    var tableData = [];\n    docList.forEach(function (docs, index) {\n      var users = {\n        id: index,\n        documentName: docs.name,\n        description: docs.description,\n        actions: React.createElement(\"div\", {\n          className: \"actions-right\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }, React.createElement(Input, {\n          type: \"checkbox\",\n          id: index,\n          value: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }))\n      };\n      tableData.push(users);\n    });\n    setData(tableData);\n  }, [docList]);\n\n  var renderItem = function renderItem(itemData) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      NumberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, props.documentName));\n  };\n\n  return React.createElement(Block, {\n    flex: true,\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingBottom: 30,\n      width: width\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 16,\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"View My Documents\"), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  title: {\n    fontFamily: 'open-sans-bold',\n    paddingBottom: theme.SIZES.BASE,\n    paddingHorizontal: theme.SIZES.BASE * 2,\n    marginTop: 44,\n    color: argonTheme.COLORS.HEADER\n  },\n  group: {\n    paddingTop: theme.SIZES.BASE * 2\n  },\n  shadow: {\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.2,\n    elevation: 2\n  },\n  button: {\n    marginBottom: theme.SIZES.BASE,\n    width: width - theme.SIZES.BASE * 2\n  },\n  optionsButton: {\n    width: \"auto\",\n    height: 34,\n    paddingHorizontal: theme.SIZES.BASE,\n    paddingVertical: 10\n  },\n  input: {\n    borderBottomWidth: 1\n  },\n  inputDefault: {\n    borderBottomColor: argonTheme.COLORS.PLACEHOLDER\n  },\n  inputTheme: {\n    borderBottomColor: argonTheme.COLORS.PRIMARY\n  },\n  inputInfo: {\n    borderBottomColor: argonTheme.COLORS.INFO\n  },\n  inputSuccess: {\n    borderBottomColor: argonTheme.COLORS.SUCCESS\n  },\n  inputWarning: {\n    borderBottomColor: argonTheme.COLORS.WARNING\n  },\n  inputDanger: {\n    borderBottomColor: argonTheme.COLORS.ERROR\n  },\n  social: {\n    width: theme.SIZES.BASE * 3.5,\n    height: theme.SIZES.BASE * 3.5,\n    borderRadius: theme.SIZES.BASE * 1.75,\n    justifyContent: \"center\"\n  }\n});\nexport default MyDocsView;","map":{"version":3,"sources":["C:/ReactNative/MonitorMobileUI/MonitorScreens/MyDocsView.js"],"names":["React","useEffect","useState","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","axios","getDocumentsByOrganisationId","Table","TableWrapper","Row","Rows","Col","Cols","Cell","Dimensions","get","width","MyDocsView","docList","setDocList","organisationId","then","response","docs","data","forEach","object","push","catch","error","console","log","setData","tableData","index","users","id","documentName","name","description","actions","renderItem","itemData","props","paddingBottom","styles","title","item","StyleSheet","create","fontFamily","SIZES","BASE","paddingHorizontal","marginTop","color","COLORS","HEADER","group","paddingTop","shadow","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","elevation","button","marginBottom","optionsButton","paddingVertical","input","borderBottomWidth","inputDefault","borderBottomColor","PLACEHOLDER","inputTheme","PRIMARY","inputInfo","INFO","inputSuccess","SUCCESS","inputWarning","WARNING","inputDanger","ERROR","social","borderRadius","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    FlatList,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nimport axios from \"axios\";\r\nimport {getDocumentsByOrganisationId} from \"../Services/DocumentService\";\r\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nconst MyDocsView = () => {\r\n\r\n    const [docList, setDocList] = useState([]);\r\n    const organisationId = 1;\r\n\r\n    useEffect(() => {\r\n            getDocumentsByOrganisationId(organisationId)\r\n                .then((response) => {\r\n                    const docs = []\r\n                    response.data.forEach(object => {\r\n                        docs.push(object)\r\n                        // setIsLoading(true)\r\n                    })\r\n                    setDocList(docs)\r\n                }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        },\r\n        []);\r\n\r\n        const [data, setData] = useState([]);\r\n        useEffect(() => {\r\n            const tableData = [];\r\n            docList.forEach((docs, index) => {\r\n                let users = {\r\n                    id: index,\r\n                    documentName: docs.name,\r\n                    description: docs.description,\r\n                    actions: (\r\n                        <div className=\"actions-right\">\r\n                            <Input type=\"checkbox\" id={index} value={index}/>\r\n                        </div>\r\n                    ),\r\n                }\r\n                tableData.push(users);\r\n            })\r\n            setData(tableData);\r\n        }, [docList]);\r\n\r\n    const renderItem = itemData => {\r\n        return (\r\n            <View>\r\n                        <Text NumberOfLines={1}>\r\n                            {props.documentName}\r\n                        </Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Block flex center>\r\n            <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                contentContainerStyle={{ paddingBottom: 30, width }}\r\n            >\r\n                <Text size={16} style={styles.title}>\r\n                    View My Documents\r\n                </Text>\r\n                {/*<Table borderStyle={{borderWidth: 2, borderColor: '#c8e1ff'}}>*/}\r\n                {/*    <Row data={\"Document Name\"} style={\"Description\"} textStyle={styles.title}/>*/}\r\n\r\n                {/*    /!*<Rows data={state.tableData} textStyle={styles.text}/>*!/*/}\r\n                {/*</Table>*/}\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={(item, index) => item.id}\r\n                    renderItem={renderItem}\r\n                    style={{ width: '100%'}}\r\n                />\r\n            </ScrollView>\r\n        </Block>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontFamily: 'open-sans-bold',\r\n        paddingBottom: theme.SIZES.BASE,\r\n        paddingHorizontal: theme.SIZES.BASE * 2,\r\n        marginTop: 44,\r\n        color: argonTheme.COLORS.HEADER\r\n    },\r\n    group: {\r\n        paddingTop: theme.SIZES.BASE * 2\r\n    },\r\n    shadow: {\r\n        shadowColor: \"black\",\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 4,\r\n        shadowOpacity: 0.2,\r\n        elevation: 2\r\n    },\r\n    button: {\r\n        marginBottom: theme.SIZES.BASE,\r\n        width: width - theme.SIZES.BASE * 2\r\n    },\r\n    optionsButton: {\r\n        width: \"auto\",\r\n        height: 34,\r\n        paddingHorizontal: theme.SIZES.BASE,\r\n        paddingVertical: 10\r\n    },\r\n    input: {\r\n        borderBottomWidth: 1\r\n    },\r\n    inputDefault: {\r\n        borderBottomColor: argonTheme.COLORS.PLACEHOLDER\r\n    },\r\n    inputTheme: {\r\n        borderBottomColor: argonTheme.COLORS.PRIMARY\r\n    },\r\n    inputInfo: {\r\n        borderBottomColor: argonTheme.COLORS.INFO\r\n    },\r\n    inputSuccess: {\r\n        borderBottomColor: argonTheme.COLORS.SUCCESS\r\n    },\r\n    inputWarning: {\r\n        borderBottomColor: argonTheme.COLORS.WARNING\r\n    },\r\n    inputDanger: {\r\n        borderBottomColor: argonTheme.COLORS.ERROR\r\n    },\r\n    social: {\r\n        width: theme.SIZES.BASE * 3.5,\r\n        height: theme.SIZES.BASE * 3.5,\r\n        borderRadius: theme.SIZES.BASE * 1.75,\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nexport default MyDocsView;\r\n"]},"metadata":{},"sourceType":"module"}