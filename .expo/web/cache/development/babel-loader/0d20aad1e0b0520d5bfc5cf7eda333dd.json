{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\UpdatePersonalDetails.js\";\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport styles from \"../constants/ScreenTheme\";\nimport { LogInContext } from \"../context/LogInContext\";\nimport axios from 'axios';\nimport { updateUser } from \"../Services/Auth\";\nimport { MONITOR_URL } from \"../constants/MonitorConstants\";\n\nvar UpdatePersonalDetails = function UpdatePersonalDetails(props) {\n  var _useContext = useContext(LogInContext),\n      userInfo = _useContext.userInfo,\n      setUserInfo = _useContext.setUserInfo;\n\n  var _useContext2 = useContext(LogInContext),\n      userOrganisation = _useContext2.userOrganisation;\n\n  var userId = userInfo.id;\n  var firstNameString = userInfo.firstName.toString();\n  var lastNameString = userInfo.lastName.toString();\n  var emailString = userInfo.email.toString();\n\n  var _useState = useState(firstNameString),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(lastNameString),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(emailString),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailValid = _useState8[0],\n      setEmailValid = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorState = _useState10[0],\n      setError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorText = _useState12[0],\n      setErrorText = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1];\n\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  function verifyEmail(input) {\n    var emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return emailRegex.test(input);\n  }\n\n  function changeEmailHandler(input) {\n    setEmail(input);\n\n    if (verifyEmail(input)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  }\n\n  function changePasswordHandler(input) {\n    setPassword(input);\n  }\n\n  function handleUpdate() {\n    var data, response;\n    return _regeneratorRuntime.async(function handleUpdate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            changeEmailHandler(email);\n            data = {\n              \"userId\": userInfo.id,\n              \"firstName\": firstName,\n              \"lastName\": lastName,\n              \"email\": email,\n              \"password\": password\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.put(MONITOR_URL + \"/api/user/update\", data).then(function (response) {\n              var user = {\n                id: response.data.userId,\n                email: response.data.email,\n                firstName: response.data.firstName,\n                lastName: response.data.lastName\n              };\n              setUserInfo(user);\n              alert(\"Details succesfully changed!\");\n              props.navigation.pop();\n            }).catch(function (err) {\n              alert(\"Invalid details! Please check all fields!\");\n            }));\n\n          case 5:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error caught in main loop: \", _context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return React.createElement(Block, {\n    style: styles.group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Update Personal Details\"), React.createElement(Block, {\n    safe: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, emailValid ? null : React.createElement(Text, {\n    color: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 38\n    }\n  }, \" Please Enter Valid Email \"), errorState ? React.createElement(Text, {\n    color: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 31\n    }\n  }, errorText) : null, React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"First Name\"), React.createElement(Input, {\n    right: true,\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    iconContent: React.createElement(Block, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, firstNameString), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), React.createElement(Input, {\n    right: true,\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    iconContent: React.createElement(Block, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, lastNameString), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"E-mail Address\"), React.createElement(Input, {\n    right: true,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    iconContent: React.createElement(Block, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, emailString), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Current Password\"), React.createElement(Input, {\n    rounded: true,\n    password: true,\n    viewPass: true,\n    onChangeText: changePasswordHandler,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), React.createElement(Block, {\n    middle: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableCmp, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    onPress: handleUpdate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, \"SAVE DETAILS\")))));\n};\n\nexport default UpdatePersonalDetails;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/MonitorScreens/UpdatePersonalDetails.js"],"names":["React","useEffect","useState","useContext","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","Dimensions","get","width","styles","LogInContext","axios","updateUser","MONITOR_URL","UpdatePersonalDetails","props","userInfo","setUserInfo","userOrganisation","userId","id","firstNameString","firstName","toString","lastNameString","lastName","emailString","email","setFirstName","setLastName","setEmail","emailValid","setEmailValid","errorState","setError","errorText","setErrorText","password","setPassword","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","verifyEmail","input","emailRegex","test","changeEmailHandler","changePasswordHandler","handleUpdate","data","put","then","response","user","alert","navigation","pop","catch","err","console","log","group","title","heading","text","flex"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    FlatList,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity,\r\n    TouchableNativeFeedback,\r\n    Alert, Platform\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nimport styles from \"../constants/ScreenTheme\";\r\nimport {LogInContext} from \"../context/LogInContext\";\r\nimport axios from 'axios';\r\nimport {updateUser} from \"../Services/Auth\";\r\nimport {MONITOR_URL} from \"../constants/MonitorConstants\";\r\n\r\n/**\r\n * @author Matt Belgre, Manik Bagga, Chris Bautista\r\n * @description This component updates the user's details in the server and changes the context accordingly.\r\n */\r\nconst UpdatePersonalDetails = props => {\r\n    // const userId = 1;\r\n    const {userInfo, setUserInfo} = useContext(LogInContext);\r\n    const {userOrganisation} = useContext(LogInContext);\r\n\r\n    const userId = userInfo.id;\r\n\r\n    const firstNameString = userInfo.firstName.toString();\r\n    const lastNameString = userInfo.lastName.toString();\r\n    const emailString = userInfo.email.toString();\r\n\r\n    const [firstName, setFirstName] = useState(firstNameString);\r\n    const [lastName, setLastName] = useState(lastNameString);\r\n    const [email, setEmail] = useState(emailString);\r\n    const [emailValid, setEmailValid] = useState(true);\r\n    const [errorState, setError] = useState(true);\r\n    const [errorText, setErrorText] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    let TouchableCmp = TouchableOpacity;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n    }\r\n\r\n    /**\r\n     * @author Matt Belgre, Manik Bagga\r\n     * @description The following functions handle e-mail formatting and form state\r\n     */\r\n    function verifyEmail(input){\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return emailRegex.test(input)\r\n    }\r\n    function changeEmailHandler(input){\r\n        setEmail(input);\r\n        if(verifyEmail(input)){\r\n            setEmailValid(true);\r\n        }\r\n        else{\r\n            setEmailValid(false)\r\n        }\r\n    }\r\n\r\n    function changePasswordHandler(input){\r\n        setPassword(input);\r\n    }\r\n\r\n    /**\r\n     * @author Matt Belgre, Manik Bagga, Chris Bautista\r\n     * @description This function attempts to update the user's details in the server, and handles incorrect input\r\n     */\r\n    async function handleUpdate(){\r\n        try {\r\n            changeEmailHandler(email);\r\n\r\n            const data = {\r\n                \"userId\":userInfo.id,\r\n                \"firstName\":firstName,\r\n                \"lastName\":lastName,\r\n                \"email\":email,\r\n                \"password\":password,\r\n            }\r\n            // if(profileNewPasswordState === \"has-success\" && profileConfirmNewPasswordState === \"has-success\" && profileNewPassword !== \"\"){\r\n            //     console.log(\"newPassword added to profile put request\");\r\n            //     data.newPassword = profileNewPassword;\r\n            // }\r\n            const response = await axios.put(`${MONITOR_URL}/api/user/update`, data)\r\n                .then (response => {\r\n                    const user = {\r\n                        id: response.data.userId,\r\n                        email: response.data.email,\r\n                        firstName: response.data.firstName,\r\n                        lastName: response.data.lastName\r\n                    }\r\n                    setUserInfo(user);\r\n                    alert(\"Details succesfully changed!\");\r\n                    props.navigation.pop();\r\n                })\r\n                .catch (err => {\r\n                    alert(\"Invalid details! Please check all fields!\")\r\n                })\r\n            return response;\r\n\r\n        } catch (err) {\r\n            // console.log(\"error in handleUpdate\", JSON.stringify(err));\r\n            //warningWithConfirmMessage(err.response.data.userEmail);//userEmail exception on client side does not mean exclusively email errors\r\n            //return err;\r\n            console.log(\"Error caught in main loop: \", err)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @author Chris Bautista\r\n     * @description Displays the form for the user to input new details\r\n     */\r\n    return (\r\n        <Block style={styles.group}>\r\n            <Text style={styles.title}>Update Personal Details</Text>\r\n            <Block safe>\r\n                {emailValid ? null : <Text color=\"red\"> Please Enter Valid Email </Text>}\r\n                {errorState ? <Text color=\"red\" >{errorText}</Text> : null}\r\n                <Text style={styles.heading}>First Name</Text>\r\n                <Input right\r\n                       onChangeText={text =>\r\n                           setFirstName(text)}\r\n                       iconContent={<Block />}>\r\n                    {firstNameString}\r\n                </Input>\r\n                <Text style={styles.heading}>Last Name</Text>\r\n                <Input right\r\n                       onChangeText={text =>\r\n                           setLastName(text)}\r\n                       iconContent={<Block />}>\r\n                    {lastNameString}\r\n                </Input>\r\n                <Text style={styles.heading}>E-mail Address</Text>\r\n                <Input right\r\n                       onChangeText={text =>\r\n                           setEmail(text)}\r\n                       iconContent={<Block />}>\r\n                    {emailString}\r\n                </Input>\r\n                <Text style={styles.heading}>Current Password</Text>\r\n                <Input rounded\r\n                       password\r\n                       viewPass\r\n                       onChangeText={changePasswordHandler}\r\n                       value={password}\r\n                />\r\n                <Block middle>\r\n                    <TouchableCmp style={{ flex: 1 }}>\r\n                        <Button\r\n                            onPress={handleUpdate}\r\n                        >SAVE DETAILS</Button>\r\n                    </TouchableCmp>\r\n                </Block>\r\n            </Block>\r\n        </Block>\r\n    );\r\n}\r\n\r\nexport default UpdatePersonalDetails;\r\n"]},"metadata":{},"sourceType":"module"}