{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { MONITOR_URL } from \"../constants/MonitorConstants\";\nexport var getDocumentsByOrganisationId = function getDocumentsByOrganisationId(organisationId) {\n  return _regeneratorRuntime.async(function getDocumentsByOrganisationId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(MONITOR_URL + \"/api/document/getDocInfo/value=\" + organisationId));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/Services/DocumentService.js"],"names":["axios","MONITOR_URL","getDocumentsByOrganisationId","organisationId","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR;AAOA,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAOC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC3BH,KAAK,CAACI,GAAN,CAAaH,WAAb,uCAA0DE,cAA1D,CAD2B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC","sourcesContent":["import axios from \"axios\";\r\nimport {MONITOR_URL} from \"../constants/MonitorConstants\";\r\n\r\n/**\r\n * @author Matthew Belgre\r\n * @param organisationId the ID of the Organisation being used to search with\r\n * @return {Promise<AxiosResponse<any>>} A list of documents associated with the searched organisation\r\n */\r\nexport const getDocumentsByOrganisationId = async (organisationId) => {\r\n    return await axios.get(`${MONITOR_URL}/api/document/getDocInfo/value=${organisationId}`)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}