{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\Scratchpad.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\nimport axios from \"axios\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Scratchpad = function (_React$Component) {\n  _inherits(Scratchpad, _React$Component);\n\n  var _super = _createSuper(Scratchpad);\n\n  function Scratchpad() {\n    _classCallCheck(this, Scratchpad);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Scratchpad, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Block, {\n        flex: true,\n        center: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingBottom: 30,\n          width: width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        size: 16,\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, \"Scratchpad\")));\n    }\n  }]);\n\n  return Scratchpad;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  title: {\n    fontFamily: 'open-sans-bold',\n    paddingBottom: theme.SIZES.BASE,\n    paddingHorizontal: theme.SIZES.BASE * 2,\n    marginTop: 44,\n    color: argonTheme.COLORS.HEADER\n  },\n  group: {\n    paddingTop: theme.SIZES.BASE * 2\n  },\n  shadow: {\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.2,\n    elevation: 2\n  },\n  button: {\n    marginBottom: theme.SIZES.BASE,\n    width: width - theme.SIZES.BASE * 2\n  },\n  optionsButton: {\n    width: \"auto\",\n    height: 34,\n    paddingHorizontal: theme.SIZES.BASE,\n    paddingVertical: 10\n  },\n  input: {\n    borderBottomWidth: 1\n  },\n  inputDefault: {\n    borderBottomColor: argonTheme.COLORS.PLACEHOLDER\n  },\n  inputTheme: {\n    borderBottomColor: argonTheme.COLORS.PRIMARY\n  },\n  inputInfo: {\n    borderBottomColor: argonTheme.COLORS.INFO\n  },\n  inputSuccess: {\n    borderBottomColor: argonTheme.COLORS.SUCCESS\n  },\n  inputWarning: {\n    borderBottomColor: argonTheme.COLORS.WARNING\n  },\n  inputDanger: {\n    borderBottomColor: argonTheme.COLORS.ERROR\n  },\n  social: {\n    width: theme.SIZES.BASE * 3.5,\n    height: theme.SIZES.BASE * 3.5,\n    borderRadius: theme.SIZES.BASE * 1.75,\n    justifyContent: \"center\"\n  }\n});\nexport default Scratchpad;","map":{"version":3,"sources":["C:/ReactNative/MonitorMobileUI/MonitorScreens/Scratchpad.js"],"names":["React","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","axios","Dimensions","get","width","Scratchpad","paddingBottom","styles","title","Component","StyleSheet","create","fontFamily","SIZES","BASE","paddingHorizontal","marginTop","color","COLORS","HEADER","group","paddingTop","shadow","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","elevation","button","marginBottom","optionsButton","paddingVertical","input","borderBottomWidth","inputDefault","borderBottomColor","PLACEHOLDER","inputTheme","PRIMARY","inputInfo","INFO","inputSuccess","SUCCESS","inputWarning","WARNING","inputDanger","ERROR","social","borderRadius","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    ScrollView,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nclass Scratchpad extends React.Component {\r\n    render() {\r\n        return (\r\n            <Block flex center>\r\n                <ScrollView\r\n                    showsVerticalScrollIndicator={false}\r\n                    contentContainerStyle={{ paddingBottom: 30, width }}\r\n                >\r\n                    <Text size={16} style={styles.title}>\r\n                        Scratchpad\r\n                    </Text>\r\n\r\n                </ScrollView>\r\n            </Block>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontFamily: 'open-sans-bold',\r\n        paddingBottom: theme.SIZES.BASE,\r\n        paddingHorizontal: theme.SIZES.BASE * 2,\r\n        marginTop: 44,\r\n        color: argonTheme.COLORS.HEADER\r\n    },\r\n    group: {\r\n        paddingTop: theme.SIZES.BASE * 2\r\n    },\r\n    shadow: {\r\n        shadowColor: \"black\",\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 4,\r\n        shadowOpacity: 0.2,\r\n        elevation: 2\r\n    },\r\n    button: {\r\n        marginBottom: theme.SIZES.BASE,\r\n        width: width - theme.SIZES.BASE * 2\r\n    },\r\n    optionsButton: {\r\n        width: \"auto\",\r\n        height: 34,\r\n        paddingHorizontal: theme.SIZES.BASE,\r\n        paddingVertical: 10\r\n    },\r\n    input: {\r\n        borderBottomWidth: 1\r\n    },\r\n    inputDefault: {\r\n        borderBottomColor: argonTheme.COLORS.PLACEHOLDER\r\n    },\r\n    inputTheme: {\r\n        borderBottomColor: argonTheme.COLORS.PRIMARY\r\n    },\r\n    inputInfo: {\r\n        borderBottomColor: argonTheme.COLORS.INFO\r\n    },\r\n    inputSuccess: {\r\n        borderBottomColor: argonTheme.COLORS.SUCCESS\r\n    },\r\n    inputWarning: {\r\n        borderBottomColor: argonTheme.COLORS.WARNING\r\n    },\r\n    inputDanger: {\r\n        borderBottomColor: argonTheme.COLORS.ERROR\r\n    },\r\n    social: {\r\n        width: theme.SIZES.BASE * 3.5,\r\n        height: theme.SIZES.BASE * 3.5,\r\n        borderRadius: theme.SIZES.BASE * 1.75,\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nexport default Scratchpad;\r\n"]},"metadata":{},"sourceType":"module"}