{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\components\\\\ViewEquipmentDetailsTile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"../constants/TileTheme\";\nimport { Block } from \"galio-framework\";\nimport { argonTheme } from \"../constants\";\n\nvar ViewEquipmentDetailsTile = function ViewEquipmentDetailsTile(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(View, {\n    style: styles.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableCmp, {\n    style: {\n      flex: 1\n    },\n    onPress: props.onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.container),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.monitorName), React.createElement(Text, {\n    style: styles.heading,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, props.description), React.createElement(Text, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.heading), {\n      color: argonTheme.COLORS.WHITE\n    }), {\n      backgroundColor: props.status ? argonTheme.COLORS.SUCCESS : argonTheme.COLORS.ERROR\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, props.status ? \"Operating Normally\" : \"Faulty!\"), React.createElement(Block, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Equipment Name: \", props.equipmentName), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Manufacturer: \", props.manufacturer), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Model: \", props.model)))));\n};\n\nexport default ViewEquipmentDetailsTile;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/components/ViewEquipmentDetailsTile.js"],"names":["React","styles","Block","argonTheme","ViewEquipmentDetailsTile","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","gridItem","flex","onSelect","container","title","monitorName","heading","description","color","COLORS","WHITE","backgroundColor","status","SUCCESS","ERROR","normal","equipmentName","manufacturer","model"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,OAAOC,MAAP;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAAQC,UAAR;;AAMA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,KAAK,EAAI;AACxC,MAAIC,YAAY,GAAGC,gBAAnB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACvDJ,IAAAA,YAAY,GAAGK,uBAAf;AACD;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAkC,IAAA,OAAO,EAAER,KAAK,CAACS,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACI,IAAA,KAAK,oBAAOb,MAAM,CAACc,SAAd,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,KAApB;AAA2B,IAAA,aAAa,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACY,WADT,CAHF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,OAApB;AAA6B,IAAA,aAAa,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,WADT,CANF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,gDAAMlB,MAAM,CAACiB,OAAb,GAAyB;AAACE,MAAAA,KAAK,EAAEjB,UAAU,CAACkB,MAAX,CAAkBC;AAA1B,KAAzB,GAA6D;AAAEC,MAAAA,eAAe,EAAElB,KAAK,CAACmB,MAAN,GAAerB,UAAU,CAACkB,MAAX,CAAkBI,OAAjC,GAA2CtB,UAAU,CAACkB,MAAX,CAAkBK;AAAhF,KAA7D,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACmB,MAAN,GAAe,oBAAf,GAAsC,SADzC,CATF,EAeE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAAC0B,MAApB;AAA4B,IAAA,aAAa,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBtB,KAAK,CAACuB,aADzB,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC0B,MAApB;AAA4B,IAAA,aAAa,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBtB,KAAK,CAACwB,YADvB,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5B,MAAM,CAAC0B,MAApB;AAA4B,IAAA,aAAa,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUtB,KAAK,CAACyB,KADhB,CAPF,CAfF,CADF,CADF,CADJ;AA6CD,CApDD;;AAsDA,eAAe1B,wBAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  TouchableNativeFeedback, FlatList\r\n} from 'react-native';\r\n\r\nimport styles from \"../constants/TileTheme\";\r\nimport {Block} from \"galio-framework\";\r\nimport {argonTheme} from \"../constants\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This component controls the styling for displaying the equipment details flatlist\r\n */\r\nconst ViewEquipmentDetailsTile = props => {\r\n  let TouchableCmp = TouchableOpacity;\r\n\r\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n    TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n  }\r\n\r\n  return (\r\n      <View style={styles.gridItem}>\r\n        <TouchableCmp style={{ flex: 1 }} onPress={props.onSelect}>\r\n          <View\r\n              style={{ ...styles.container}}\r\n          >\r\n            <Text style={styles.title} numberOfLines={2}>\r\n              {props.monitorName}\r\n            </Text>\r\n            <Text style={styles.heading} numberOfLines={2}>\r\n              {props.description}\r\n            </Text>\r\n            <Text style={{...styles.heading, ...{color: argonTheme.COLORS.WHITE},...{ backgroundColor: props.status ? argonTheme.COLORS.SUCCESS : argonTheme.COLORS.ERROR}}}>\r\n              {props.status ? \"Operating Normally\" : \"Faulty!\"}\r\n            </Text>\r\n            {/*<Text style={styles.normal} numberOfLines={2}>*/}\r\n            {/*  Equipment Id: {props.equipmentId}*/}\r\n            {/*</Text>*/}\r\n            <Block>\r\n              <Text style={styles.normal} numberOfLines={2}>\r\n                Equipment Name: {props.equipmentName}\r\n              </Text>\r\n              <Text style={styles.normal} numberOfLines={2}>\r\n                Manufacturer: {props.manufacturer}\r\n              </Text>\r\n              <Text style={styles.normal} numberOfLines={2}>\r\n                Model: {props.model}\r\n              </Text>\r\n              {/*<Text style={styles.normal} numberOfLines={2}>*/}\r\n              {/*  Current State: {props.currentState}*/}\r\n              {/*</Text>*/}\r\n              {/*<Text style={styles.normal} numberOfLines={2}>*/}\r\n              {/*  Equipment Monitor Id: {props.equipmentMonitorId}*/}\r\n              {/*</Text>*/}\r\n              {/*<Text style={styles.normal} numberOfLines={2}>*/}\r\n              {/*  Flags: {props.flags}*/}\r\n              {/*</Text>*/}\r\n              {/*<Text style={styles.normal} numberOfLines={2}>*/}\r\n              {/*  IP Address: {props.ipAddress}*/}\r\n              {/*</Text>*/}\r\n            </Block>\r\n          </View>\r\n        </TouchableCmp>\r\n      </View>\r\n  );\r\n};\r\n\r\nexport default ViewEquipmentDetailsTile;\r\n"]},"metadata":{},"sourceType":"module"}