{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\JobDetails.js\";\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport styles from \"../constants/ScreenTheme\";\nimport { LogInContext } from \"../context/LogInContext\";\n\nvar MyJobDetailsView = function MyJobDetailsView(props) {\n  var _useContext = useContext(LogInContext),\n      userInfo = _useContext.userInfo;\n\n  var _useContext2 = useContext(LogInContext),\n      userOrganisation = _useContext2.userOrganisation;\n\n  var userId = userInfo.id;\n  var jobIdentifier = props.route.params.params.jobIdentifier;\n  var jobId = props.route.params.params.jobId;\n  var jobName = props.route.params.params.jobName;\n  var address = props.route.params.params.address;\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(Block, {\n    style: styles.group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, jobName), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, address), React.createElement(Button, {\n    onPress: function onPress() {\n      props.navigation.navigate('View Job Equipment', {\n        params: {\n          jobIdentifier: jobIdentifier,\n          address: address,\n          jobId: jobId,\n          jobName: jobName\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"VIEW EQUIPMENT\"), React.createElement(Button, {\n    onPress: function onPress() {\n      props.navigation.navigate('View Job Documents', {\n        params: {\n          jobIdentifier: jobIdentifier,\n          address: address,\n          jobId: jobId,\n          jobName: jobName\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"VIEW JOB DOCUMENTS\"));\n};\n\nexport default MyJobDetailsView;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/MonitorScreens/JobDetails.js"],"names":["React","useEffect","useState","useContext","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","Dimensions","get","width","styles","LogInContext","MyJobDetailsView","props","userInfo","userOrganisation","userId","id","jobIdentifier","route","params","jobId","jobName","address","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","group","title","heading","navigation","navigate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;;;;;;;;;;AAYA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAM,IAAIC,QAAhC,EAA0CC,KAA1C,QAAuD,iBAAvD;AAEA,SAASC,UAAT,EAAqBC,IAArB;AACA,SAASJ,MAAT,EAAiBK,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,MAA9C;;sBAEkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;AAER,OAAOC,MAAP;AACA,SAAQC,YAAR;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAAA,oBAEXnB,UAAU,CAACiB,YAAD,CAFC;AAAA,MAEvBG,QAFuB,eAEvBA,QAFuB;;AAAA,qBAGHpB,UAAU,CAACiB,YAAD,CAHP;AAAA,MAGvBI,gBAHuB,gBAGvBA,gBAHuB;;AAK9B,MAAMC,MAAM,GAAGF,QAAQ,CAACG,EAAxB;AAEA,MAAMC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBA,MAAnB,CAA0BF,aAAhD;AACA,MAAMG,KAAK,GAAGR,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBA,MAAnB,CAA0BC,KAAxC;AACA,MAAMC,OAAO,GAAGT,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBA,MAAnB,CAA0BE,OAA1C;AACA,MAAMC,OAAO,GAAGV,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBA,MAAnB,CAA0BG,OAA1C;AAEA,MAAIC,YAAY,GAAGC,gBAAnB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACrDJ,IAAAA,YAAY,GAAGK,uBAAf;AACH;;AAED,SACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEnB,MAAM,CAACoB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,OAA5B,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACsB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BT,OAA9B,CAFJ,EAKI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACXV,MAAAA,KAAK,CAACoB,UAAN,CAAiBC,QAAjB,CAA0B,oBAA1B,EACI;AACId,QAAAA,MAAM,EAAE;AACJF,UAAAA,aAAa,EAAEA,aADX;AAEJK,UAAAA,OAAO,EAAEA,OAFL;AAGJF,UAAAA,KAAK,EAAEA,KAHH;AAIJC,UAAAA,OAAO,EAAEA;AAJL;AADZ,OADJ;AASH,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAmBI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACfT,MAAAA,KAAK,CAACoB,UAAN,CAAiBC,QAAjB,CAA0B,oBAA1B,EACI;AACId,QAAAA,MAAM,EAAE;AACJF,UAAAA,aAAa,EAAEA,aADX;AAEJK,UAAAA,OAAO,EAAEA,OAFL;AAGJF,UAAAA,KAAK,EAAEA,KAHH;AAIJC,UAAAA,OAAO,EAAEA;AAJL;AADZ,OADJ;AASH,KAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAnBJ,CADJ;AAkCH,CApDD;;AAsDA,eAAeV,gBAAf","sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    FlatList,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity,\r\n    TouchableNativeFeedback,\r\n    Alert, Platform\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nimport styles from \"../constants/ScreenTheme\";\r\nimport {LogInContext} from \"../context/LogInContext\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This component is unused as we removed the view documents function.\r\n * It was meant to give the user a choice to view the job's equipment or the documents for that job.\r\n */\r\n\r\nconst MyJobDetailsView = props => {\r\n    // const userId = 1;\r\n    const {userInfo} = useContext(LogInContext);\r\n    const {userOrganisation} = useContext(LogInContext);\r\n\r\n    const userId = userInfo.id;\r\n\r\n    const jobIdentifier = props.route.params.params.jobIdentifier;\r\n    const jobId = props.route.params.params.jobId;\r\n    const jobName = props.route.params.params.jobName;\r\n    const address = props.route.params.params.address;\r\n\r\n    let TouchableCmp = TouchableOpacity;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n    }\r\n\r\n    return (\r\n        <Block style={styles.group}>\r\n            <Text style={styles.title}>{jobName}</Text>\r\n            <Text style={styles.heading}>{address}</Text>\r\n            {/*<Text style={styles.normal}>Job Id: {jobId}</Text>*/}\r\n            {/*<Text style={styles.normal}>Job Identifier: {jobIdentifier}</Text>*/}\r\n            <Button\r\n                onPress={() => {\r\n                    props.navigation.navigate('View Job Equipment',\r\n                        {\r\n                            params: {\r\n                                jobIdentifier: jobIdentifier,\r\n                                address: address,\r\n                                jobId: jobId,\r\n                                jobName: jobName\r\n                            }\r\n                        });\r\n                }}\r\n            >VIEW EQUIPMENT</Button>\r\n\r\n            <Button\r\n                onPress={() => {\r\n                props.navigation.navigate('View Job Documents',\r\n                    {\r\n                        params: {\r\n                            jobIdentifier: jobIdentifier,\r\n                            address: address,\r\n                            jobId: jobId,\r\n                            jobName: jobName\r\n                        }\r\n                    });\r\n            }}>VIEW JOB DOCUMENTS</Button>\r\n        </Block>\r\n    );\r\n}\r\n\r\nexport default MyJobDetailsView;\r\n"]},"metadata":{},"sourceType":"module"}