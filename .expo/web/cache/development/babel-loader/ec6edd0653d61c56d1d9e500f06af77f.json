{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\Scratchpad.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\nimport axios from \"axios\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport styles from \"../constants/ScreenTheme\";\n\nvar Scratchpad = function Scratchpad() {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      latitude = _useState2[0],\n      setLatitude = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      longitude = _useState4[0],\n      setLongitude = _useState4[1];\n\n  var _useState5 = useState({\n    entry: '50 Park St, Sydney, NSW 2000'\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var position = window.navigator.geolocation.getCurrentPosition(function (position) {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }, function (err) {\n    alert(err.message);\n  });\n\n  var geo = function geo() {\n    alert(address);\n    Linking.openURL(\"https://www.google.com/maps/dir/?api=1&origin=\" + latitude + \",\" + longitude + \"&destination=\" + address);\n  };\n\n  var pdf = function pdf() {\n    axios({\n      url: \"http://192.168.20.13:8080/api/document/test\",\n      method: 'GET',\n      responseType: 'blob'\n    }).then(function (response) {\n      var url = window.URL.createObjectURL(new Blob([response.data]));\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'file.pdf');\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  return React.createElement(Block, {\n    flex: true,\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingBottom: 30,\n      width: width\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Longitude: \", longitude), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Latitude: \", latitude), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, address.entry), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(Input, {\n    right: true,\n    placeholder: \"Input Address Here\",\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    iconContent: React.createElement(Block, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), React.createElement(Button, {\n    color: \"info\",\n    onPress: geo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Geo!!!\"), React.createElement(Button, {\n    color: \"info\",\n    onPress: pdf,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"PDF!!!\")));\n};\n\nexport default Scratchpad;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/MonitorScreens/Scratchpad.js"],"names":["React","useEffect","useState","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","axios","Dimensions","get","width","styles","Scratchpad","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","latitude","setLatitude","longitude","setLongitude","entry","address","setAddress","position","window","navigator","geolocation","getCurrentPosition","coords","err","alert","message","geo","Linking","openURL","pdf","url","method","responseType","then","response","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","paddingBottom","paddingHorizontal","SIZES","BASE","text"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    ScrollView,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity, Platform, TouchableNativeFeedback, Linking\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This isn't included in the build but is just an extra component Chris uses to draft components.\r\n */\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nimport styles from \"../constants/ScreenTheme\";\r\n\r\nconst Scratchpad = () => {\r\n    let TouchableCmp = TouchableOpacity;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n    }\r\n    const [latitude, setLatitude] = useState([]);\r\n    const [longitude, setLongitude] = useState([]);\r\n    const [address, setAddress] = useState({entry: '50 Park St, Sydney, NSW 2000'})\r\n\r\n    var position = window.navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n            setLatitude(position.coords.latitude);\r\n            //can only use \"setState\" to change state\r\n            setLongitude(position.coords.longitude)\r\n            // alert(\"Latitude is: \" + latitude + \" Longitude is: \" + longitude)\r\n        },\r\n        (err) => {\r\n            alert(err.message);\r\n        }\r\n    )\r\n\r\n    const geo = () => {\r\n        alert (address);\r\n        Linking.openURL(`https://www.google.com/maps/dir/?api=1&origin=${latitude},${longitude}&destination=${address}`)\r\n    }\r\n\r\n    const pdf = () => {\r\n        axios({\r\n            url: `http://192.168.20.13:8080/api/document/test`, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        }).then((response) => {\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'file.pdf'); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Block flex center>\r\n            <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                contentContainerStyle={{ paddingBottom: 30, width }}\r\n            >\r\n                <Text>Longitude: {longitude}</Text>\r\n                <Text>Latitude: {latitude}</Text>\r\n                <Text>{address.entry}</Text>\r\n                <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\r\n                    <Input right placeholder=\"Input Address Here\"\r\n                           onChangeText={text =>\r\n                               setAddress(text)}\r\n                           iconContent={<Block />} />\r\n                </Block>\r\n                <Button color=\"info\" onPress={geo}>Geo!!!</Button>\r\n                <Button color=\"info\" onPress={pdf}>PDF!!!</Button>\r\n            </ScrollView>\r\n        </Block>\r\n    );\r\n}\r\n\r\nexport default Scratchpad;\r\n"]},"metadata":{},"sourceType":"module"}