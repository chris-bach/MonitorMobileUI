{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\ViewJobDocuments.js\";\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\nimport { argonTheme, tabs } from \"../constants\";\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\nimport { getJobsDetailsByJobId } from \"../Services/JobService\";\nimport ViewDocumentsTile from \"../components/ViewDocumentsTile\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport styles from \"../constants/ScreenTheme\";\nimport { LogInContext } from \"../context/LogInContext\";\n\nvar ViewJobDocuments = function ViewJobDocuments(props) {\n  var _useContext = useContext(LogInContext),\n      userInfo = _useContext.userInfo;\n\n  var _useContext2 = useContext(LogInContext),\n      userOrganisation = _useContext2.userOrganisation;\n\n  var userId = userInfo.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      documentDetails = _useState2[0],\n      setDocumentDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataDocuments = _useState4[0],\n      setDataDocuments = _useState4[1];\n\n  var jobIdentifier = props.route.params.params.jobIdentifier;\n  var jobId = props.route.params.params.jobId;\n  var address = props.route.params.params.address;\n  var jobName = props.route.params.params.jobName;\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  useEffect(function () {\n    getJobsDetailsByJobId(jobId, userId).then(function (response) {\n      var documentList = [];\n      response.data.jobDocuments.forEach(function (object) {\n        documentList.push(object);\n      });\n      setDocumentDetails(documentList);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  useEffect(function () {\n    var tableData = [];\n    documentDetails.forEach(function (doc, key) {\n      var documentInfo = {\n        id: key,\n        description: doc.description,\n        documentId: doc.documentId,\n        name: doc.name,\n        parentInfo: doc.parentInfo\n      };\n      tableData.push(documentInfo);\n    });\n    setDataDocuments(tableData);\n  }, [documentDetails]);\n\n  var renderDocuments = function renderDocuments(dataDocuments) {\n    return React.createElement(ViewDocumentsTile, {\n      description: dataDocuments.item.description,\n      documentId: dataDocuments.item.documentId,\n      name: dataDocuments.item.name,\n      parentInfo: dataDocuments.item.parentInfo,\n      onSelect: function onSelect() {\n        props.navigation.navigate('View PDF', {\n          params: {}\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(Block, {\n    flex: true,\n    style: styles.group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Block, {\n    flex: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, jobName), React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, address), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id.toString();\n    },\n    data: dataDocuments,\n    renderItem: renderDocuments,\n    numColumns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ViewJobDocuments;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/MonitorScreens/ViewJobDocuments.js"],"names":["React","useEffect","useState","useContext","Block","Text","Button","GaButton","theme","argonTheme","tabs","Select","Icon","Input","Header","Switch","getJobsDetailsByJobId","ViewDocumentsTile","Dimensions","get","width","styles","LogInContext","ViewJobDocuments","props","userInfo","userOrganisation","userId","id","documentDetails","setDocumentDetails","dataDocuments","setDataDocuments","jobIdentifier","route","params","jobId","address","jobName","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","then","response","documentList","data","jobDocuments","forEach","object","push","catch","error","console","log","tableData","doc","key","documentInfo","description","documentId","name","parentInfo","renderDocuments","item","navigation","navigate","group","title","heading","index","toString"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    FlatList,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TouchableOpacity,\r\n    TouchableNativeFeedback,\r\n    Alert, Platform\r\n} from \"react-native\";\r\n// Galio components\r\nimport { Block, Text, Button as GaButton, theme } from \"galio-framework\";\r\n// Argon themed components\r\nimport { argonTheme, tabs } from \"../constants\";\r\nimport { Button, Select, Icon, Input, Header, Switch } from \"../components\";\r\n\r\nimport {getJobsDetailsByJobId} from \"../Services/JobService\";\r\nimport ViewDocumentsTile from \"../components/ViewDocumentsTile\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nimport styles from \"../constants/ScreenTheme\";\r\nimport {LogInContext} from \"../context/LogInContext\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This component is unused as we removed the view documents function.\r\n * It was meant to show the user the list of job documents, similar to ViewJobEquipment\r\n */\r\n\r\nconst ViewJobDocuments = props => {\r\n    // const userId = 1;\r\n    const {userInfo} = useContext(LogInContext);\r\n    const {userOrganisation} = useContext(LogInContext);\r\n\r\n    const userId = userInfo.id;\r\n\r\n    const [documentDetails, setDocumentDetails] = useState([]);\r\n    const [dataDocuments, setDataDocuments] = useState([]);\r\n\r\n    const jobIdentifier = props.route.params.params.jobIdentifier;\r\n    const jobId = props.route.params.params.jobId;\r\n    const address = props.route.params.params.address;\r\n    const jobName = props.route.params.params.jobName;\r\n\r\n    let TouchableCmp = TouchableOpacity;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n    }\r\n\r\n    useEffect(() => {\r\n            getJobsDetailsByJobId(jobId,userId)\r\n                .then((response) => {\r\n                    const documentList = []\r\n                    response.data.jobDocuments.forEach(object => {\r\n                        documentList.push(object)\r\n                        // setIsLoading(true)\r\n                        // console.log(object)\r\n                    })\r\n                    setDocumentDetails(documentList);\r\n                }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        },\r\n        []);\r\n\r\n    useEffect(() => {\r\n        const tableData = [];\r\n        documentDetails.forEach((doc, key) => {\r\n            let documentInfo = {\r\n                id: key,\r\n                description: doc.description,\r\n                documentId: doc.documentId,\r\n                name: doc.name,\r\n                parentInfo: doc.parentInfo,\r\n            };\r\n            tableData.push(documentInfo);\r\n        })\r\n        setDataDocuments(tableData);\r\n    }, [documentDetails]);\r\n\r\n    const renderDocuments = dataDocuments => {\r\n        return (\r\n            <ViewDocumentsTile\r\n                description={dataDocuments.item.description}\r\n                documentId={dataDocuments.item.documentId}\r\n                name={dataDocuments.item.name}\r\n                parentInfo={dataDocuments.item.parentInfo}\r\n                onSelect={() => {\r\n                    props.navigation.navigate('View PDF',\r\n                        {\r\n                            params: {\r\n                                // jobIdentifier: itemData.item.jobIdentifier,\r\n                                // address: itemData.item.address,\r\n                                // job_id: itemData.item.id\r\n                            }\r\n                        });\r\n                    //alert(\"You clicked \" + dataDocuments.item.description + \" document!\" )\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Block flex style={styles.group}>\r\n            <Block flex>\r\n                <Text style={styles.title}>{jobName}</Text>\r\n                <Text style={styles.heading}>{address}</Text>\r\n                <FlatList\r\n                    keyExtractor={(item, index) => item.id.toString()} //Need to check which key!!!\r\n                    data={dataDocuments}\r\n                    renderItem={renderDocuments}\r\n                    numColumns={1}\r\n                />\r\n\r\n            </Block>\r\n        </Block>\r\n    );\r\n}\r\n\r\nexport default ViewJobDocuments;\r\n"]},"metadata":{},"sourceType":"module"}