{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\components\\\\ViewNotificationTile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"../constants/TileTheme\";\nimport { Block } from \"galio-framework\";\nimport { argonTheme } from \"../constants\";\n\nvar ViewNotificationTile = function ViewNotificationTile(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(View, {\n    style: styles.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableCmp, {\n    style: {\n      flex: 1\n    },\n    onPress: props.onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.container),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread(_objectSpread({}, styles.heading), {\n      color: props.read ? argonTheme.COLORS.HEADER : argonTheme.COLORS.WHITE\n    }), {\n      backgroundColor: props.read ? null : argonTheme.COLORS.ERROR\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, props.read ? \"Read\" : \"Unread\"), React.createElement(Block, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Job Name: \", props.jobName), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Breakdown Date: \", props.breakdownTime), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Device Name: \", props.deviceName), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Address: \", props.address), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Fault Code: \", props.faultCode), React.createElement(Text, {\n    style: styles.normal,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Last State: \", props.lastState)))));\n};\n\nexport default ViewNotificationTile;","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/components/ViewNotificationTile.js"],"names":["React","styles","Block","argonTheme","ViewNotificationTile","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","gridItem","flex","onSelect","container","heading","color","read","COLORS","HEADER","WHITE","backgroundColor","ERROR","normal","jobName","breakdownTime","deviceName","address","faultCode","lastState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    TouchableOpacity,\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Platform,\r\n    TouchableNativeFeedback, FlatList\r\n} from 'react-native';\r\n\r\nimport styles from \"../constants/TileTheme\";\r\nimport {Block} from \"galio-framework\";\r\nimport {argonTheme} from \"../constants\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This component controls the styling for displaying the notifications flatlist\r\n */\r\nconst ViewNotificationTile = props => {\r\n    let TouchableCmp = TouchableOpacity;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= 21) {\r\n        TouchableCmp = TouchableNativeFeedback; //ripple effect\r\n    }\r\n\r\n    return (\r\n        <View style={styles.gridItem}>\r\n            <TouchableCmp style={{ flex: 1 }} onPress={props.onSelect}>\r\n                <View\r\n                    style={{ ...styles.container}}\r\n                >\r\n                    <Text style={{...styles.heading, ...{color: props.read ? argonTheme.COLORS.HEADER : argonTheme.COLORS.WHITE},...{ backgroundColor: props.read ? null : argonTheme.COLORS.ERROR}}}>\r\n                        {props.read ? \"Read\" : \"Unread\"}\r\n                    </Text>\r\n                    <Block>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Job Name: {props.jobName}\r\n                        </Text>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Breakdown Date: {props.breakdownTime}\r\n                        </Text>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Device Name: {props.deviceName}\r\n                        </Text>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Address: {props.address}\r\n                        </Text>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Fault Code: {props.faultCode}\r\n                        </Text>\r\n                        <Text style={styles.normal} numberOfLines={2}>\r\n                            Last State: {props.lastState}\r\n                        </Text>\r\n                    </Block>\r\n                </View>\r\n            </TouchableCmp>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ViewNotificationTile;\r\n"]},"metadata":{},"sourceType":"module"}