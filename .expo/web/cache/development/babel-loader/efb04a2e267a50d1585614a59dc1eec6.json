{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\MonitorScreens\\\\PDFView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PDFReader from 'rn-pdf-reader-js';\nimport axios from \"axios\";\n\nvar PDFView = function (_React$Component) {\n  _inherits(PDFView, _React$Component);\n\n  var _super = _createSuper(PDFView);\n\n  function PDFView() {\n    _classCallCheck(this, PDFView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PDFView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PDFReader, {\n        source: {\n          uri: 'http://192.168.20.13:8080/api/document/test'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return PDFView;\n}(React.Component);\n\nexport { PDFView as default };","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/MonitorScreens/PDFView.js"],"names":["React","useEffect","useState","PDFReader","axios","PDFView","uri","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAOqBC,O;;;;;;;;;;;;;WACjB,kBAAS;AACL,aACI,oBAAC,SAAD;AACI,QAAA,MAAM,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;;EATgCN,KAAK,CAACO,S;;SAAtBF,O","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { View } from 'react-native'\r\nimport PDFReader from 'rn-pdf-reader-js'\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @author Chris Bautista\r\n * @description This component is unused as we removed the view documents function.\r\n * It originally rendered PDF components to the screen\r\n */\r\nexport default class PDFView extends React.Component {\r\n    render() {\r\n        return (\r\n            <PDFReader\r\n                source={{\r\n                    uri: 'http://192.168.20.13:8080/api/document/test',\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}