{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"G:\\\\ReactNative\\\\MonitorMobileUI\\\\navigation\\\\MonitorScreens.js\";\nimport React from \"react\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Login from \"../MonitorScreens/Login\";\nimport Dashboard from \"../MonitorScreens/Dashboard\";\nimport MyJobsView from \"../MonitorScreens/MyJobsView\";\nimport MyDocsView from \"../MonitorScreens/MyDocsView\";\nimport MyJobDetailsView from \"../MonitorScreens/JobDetails\";\nimport ViewJobEquipment from \"../MonitorScreens/ViewJobEquipment\";\nimport ViewEquipmentStatus from \"../MonitorScreens/ViewEquipmentStatus\";\nimport ViewJobDocuments from \"../MonitorScreens/ViewJobDocuments\";\nimport PDFView from \"../MonitorScreens/PDFView\";\nimport MyProfile from \"../MonitorScreens/MyProfile\";\nimport UpdatePersonalDetails from \"../MonitorScreens/UpdatePersonalDetails\";\nimport Scratchpad from \"../MonitorScreens/Scratchpad\";\nimport MonitorNotifications from \"../MonitorScreens/MonitorNotifications\";\nimport CustomDrawerContent from \"./MonitorMenu\";\nimport { Icon, Header } from \"../components\";\nimport { argonTheme, tabs } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction DashboardStack(props) {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    options: {\n      header: function header(_ref) {\n        var navigation = _ref.navigation,\n            scene = _ref.scene;\n        return React.createElement(Header, {\n          title: \"Monitor Dashboard\",\n          search: true,\n          options: true,\n          navigation: navigation,\n          scene: scene,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MyJobsStack(props) {\n  var _this2 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"My Jobs\",\n    component: MyJobsView,\n    options: {\n      header: function header(_ref2) {\n        var navigation = _ref2.navigation,\n            scene = _ref2.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View My Jobs\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Job Details\",\n    component: MyJobDetailsView,\n    options: {\n      header: function header(_ref3) {\n        var navigation = _ref3.navigation,\n            scene = _ref3.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"Job Details\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"View Job Equipment\",\n    component: ViewJobEquipment,\n    options: {\n      header: function header(_ref4) {\n        var navigation = _ref4.navigation,\n            scene = _ref4.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View Job Equipment\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"View Equipment Status\",\n    component: ViewEquipmentStatus,\n    options: {\n      header: function header(_ref5) {\n        var navigation = _ref5.navigation,\n            scene = _ref5.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View Equipment Status\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"View Job Documents\",\n    component: ViewJobDocuments,\n    options: {\n      header: function header(_ref6) {\n        var navigation = _ref6.navigation,\n            scene = _ref6.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View Job Documents\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"View PDF\",\n    component: PDFView,\n    options: {\n      header: function header(_ref7) {\n        var navigation = _ref7.navigation,\n            scene = _ref7.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View PDF\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction MyDocsStack(props) {\n  var _this3 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"My Documents\",\n    component: MyDocsView,\n    options: {\n      header: function header(_ref8) {\n        var navigation = _ref8.navigation,\n            scene = _ref8.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"My Documents\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"View PDF\",\n    component: PDFView,\n    options: {\n      header: function header(_ref9) {\n        var navigation = _ref9.navigation,\n            scene = _ref9.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"View PDF\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction MyProfileStack(props) {\n  var _this4 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"My Profile\",\n    component: MyProfile,\n    options: {\n      header: function header(_ref10) {\n        var navigation = _ref10.navigation,\n            scene = _ref10.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"My Profile\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Update Personal Details\",\n    component: UpdatePersonalDetails,\n    options: {\n      header: function header(_ref11) {\n        var navigation = _ref11.navigation,\n            scene = _ref11.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"Update Personal Details\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction NotificationStack(props) {\n  var _this5 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"My Notifications\",\n    component: MonitorNotifications,\n    options: {\n      header: function header(_ref12) {\n        var navigation = _ref12.navigation,\n            scene = _ref12.scene;\n        return React.createElement(Header, {\n          back: true,\n          title: \"My Notifications\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction ScratchpadStack(props) {\n  var _this6 = this;\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Scratchpad\",\n    component: Scratchpad,\n    options: {\n      header: function header(_ref13) {\n        var navigation = _ref13.navigation,\n            scene = _ref13.scene;\n        return React.createElement(Header, {\n          title: \"Scratchpad\",\n          scene: scene,\n          navigation: navigation,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }\n        });\n      },\n      cardStyle: {\n        backgroundColor: \"#F8F9FE\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction AppStack(props) {\n  var _this7 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 31\n        }\n      }));\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOptions: {\n      activeTintcolor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.75,\n        backgroundColor: \"transparent\",\n        paddingVertical: 16,\n        paddingHorizonal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        marginLeft: 12,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Dashboard\",\n    component: DashboardStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"My Jobs\",\n    component: MyJobsStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"My Documents\",\n    component: MyDocsStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"My Profile\",\n    component: MyProfileStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"My Notifications\",\n    component: NotificationStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Scratchpad\",\n    component: ScratchpadStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function OnboardingStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Onboarding\",\n    component: Login,\n    option: {\n      headerTransparent: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: AppStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["G:/ReactNative/MonitorMobileUI/navigation/MonitorScreens.js"],"names":["React","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","Login","Dashboard","MyJobsView","MyDocsView","MyJobDetailsView","ViewJobEquipment","ViewEquipmentStatus","ViewJobDocuments","PDFView","MyProfile","UpdatePersonalDetails","Scratchpad","MonitorNotifications","CustomDrawerContent","Icon","Header","argonTheme","tabs","Dimensions","get","width","Stack","Drawer","Tab","DashboardStack","props","header","navigation","scene","cardStyle","backgroundColor","MyJobsStack","MyDocsStack","MyProfileStack","NotificationStack","ScratchpadStack","AppStack","flex","activeTintcolor","inactiveTintColor","activeBackgroundColor","itemStyle","paddingVertical","paddingHorizonal","justifyContent","alignContent","alignItems","overflow","labelStyle","fontSize","marginLeft","fontWeight","OnboardingStack","headerTransparent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Easing, Animated, Dimensions } from \"react-native\";\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\n// Monitor screens\r\nimport Login from \"../MonitorScreens/Login\";\r\nimport Dashboard from \"../MonitorScreens/Dashboard\";\r\nimport MyJobsView from \"../MonitorScreens/MyJobsView\";\r\nimport MyDocsView from \"../MonitorScreens/MyDocsView\";\r\nimport MyJobDetailsView  from \"../MonitorScreens/JobDetails\";\r\nimport ViewJobEquipment from \"../MonitorScreens/ViewJobEquipment\";\r\nimport ViewEquipmentStatus from \"../MonitorScreens/ViewEquipmentStatus\";\r\nimport ViewJobDocuments from \"../MonitorScreens/ViewJobDocuments\";\r\nimport PDFView from \"../MonitorScreens/PDFView\";\r\nimport MyProfile from \"../MonitorScreens/MyProfile\";\r\nimport UpdatePersonalDetails from \"../MonitorScreens/UpdatePersonalDetails\";\r\nimport Scratchpad from \"../MonitorScreens/Scratchpad\";\r\nimport MonitorNotifications from \"../MonitorScreens/MonitorNotifications\";\r\n\r\n// drawer\r\nimport CustomDrawerContent from \"./MonitorMenu\";\r\n\r\n// header for screens\r\nimport { Icon, Header } from \"../components\";\r\nimport { argonTheme, tabs } from \"../constants\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\n/**\r\n * @author CreativeTIM, Chris Bautista\r\n * @description This file controls the navigation of the app and the screen stacks.\r\n * There are some unused assets that we've kept that we may use in future iterations of the app.\r\n */\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction DashboardStack(props) {\r\n  return (\r\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n      <Stack.Screen\r\n        name=\"Dashboard\"\r\n        component={Dashboard}\r\n        options={{\r\n          header: ({ navigation, scene }) => (\r\n            <Header\r\n              title=\"Monitor Dashboard\"\r\n              search\r\n              options\r\n              navigation={navigation}\r\n              scene={scene}\r\n            />\r\n          ),\r\n          cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction MyJobsStack(props) {\r\n    return (\r\n        <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"My Jobs\"\r\n                component={MyJobsView}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title=\"View My Jobs\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Job Details\"\r\n                component={MyJobDetailsView}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"Job Details\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"View Job Equipment\"\r\n                component={ViewJobEquipment}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"View Job Equipment\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"View Equipment Status\"\r\n                component={ViewEquipmentStatus}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"View Equipment Status\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"View Job Documents\"\r\n                component={ViewJobDocuments}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"View Job Documents\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"View PDF\"\r\n                component={PDFView}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"View PDF\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction MyDocsStack(props) {\r\n    return (\r\n        <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"My Documents\"\r\n                component={MyDocsView}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title=\"My Documents\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"View PDF\"\r\n                component={PDFView}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"View PDF\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction MyProfileStack(props) {\r\n    return (\r\n        <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"My Profile\"\r\n                component={MyProfile}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title=\"My Profile\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n            <Stack.Screen\r\n                name=\"Update Personal Details\"\r\n                component={UpdatePersonalDetails}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title= \"Update Personal Details\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction NotificationStack(props) {\r\n    return (\r\n        <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"My Notifications\"\r\n                component={MonitorNotifications}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            back\r\n                            title=\"My Notifications\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction ScratchpadStack(props) {\r\n    return (\r\n        <Stack.Navigator mode=\"card\" headerMode=\"screen\">\r\n            <Stack.Screen\r\n                name=\"Scratchpad\"\r\n                component={Scratchpad}\r\n                options={{\r\n                    header: ({ navigation, scene }) => (\r\n                        <Header\r\n                            title=\"Scratchpad\"\r\n                            scene={scene}\r\n                            navigation={navigation}\r\n                        />\r\n                    ),\r\n                    cardStyle: { backgroundColor: \"#F8F9FE\" }\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction AppStack(props) {\r\n  return (\r\n    <Drawer.Navigator\r\n      style={{ flex: 1 }}\r\n      drawerContent={props => <CustomDrawerContent {...props} />}\r\n      drawerStyle={{\r\n        backgroundColor: \"white\",\r\n        width: width * 0.8\r\n      }}\r\n      drawerContentOptions={{\r\n        activeTintcolor: \"white\",\r\n        inactiveTintColor: \"#000\",\r\n        activeBackgroundColor: \"transparent\",\r\n        itemStyle: {\r\n          width: width * 0.75,\r\n          backgroundColor: \"transparent\",\r\n          paddingVertical: 16,\r\n          paddingHorizonal: 12,\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          overflow: \"hidden\"\r\n        },\r\n        labelStyle: {\r\n          fontSize: 18,\r\n          marginLeft: 12,\r\n          fontWeight: \"normal\"\r\n        }\r\n      }}\r\n      initialRouteName=\"Dashboard\"\r\n    >\r\n      <Drawer.Screen name=\"Dashboard\" component={DashboardStack} />\r\n      <Drawer.Screen name=\"My Jobs\" component={MyJobsStack} />\r\n      <Drawer.Screen name=\"My Documents\" component={MyDocsStack} />\r\n      <Drawer.Screen name=\"My Profile\" component={MyProfileStack} />\r\n      <Drawer.Screen name=\"My Notifications\" component={NotificationStack} />\r\n      <Drawer.Screen name=\"Scratchpad\" component={ScratchpadStack} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default function OnboardingStack(props) {\r\n  return (\r\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\r\n      <Stack.Screen\r\n        name=\"Onboarding\"\r\n        component={Login}\r\n        option={{\r\n          headerTransparent: true\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"App\" component={AppStack} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}